{"version":3,"file":"0.6d1726002a8710ccbef2.hot-update.js","sources":["C:/StarterProject/MoviePosterArena/StarterProject/MovieArtArena.Web/app/public/src/Views/Posters.js","C:/StarterProject/MoviePosterArena/StarterProject/MovieArtArena.Web/app/public/src/routes.js"],"sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Footer from '../Components/Footer/Footer';\r\n\r\n\r\nclass Posters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movies: [],\r\n            addMovies: {\r\n                title: '',\r\n                description: '',\r\n                type: '',\r\n                price: '',\r\n                imageUrl: '',\r\n                id: ''\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        this.getMovies();\r\n        this.selectedItem();\r\n    }\r\n\r\n    selectedItem = (id) => {\r\n        let data = this.state.movies; \r\n        axios.get(\"http://localhost.65332/api/poster/\" + id)\r\n        .then(resp => {\r\n            let arr = resp.data.item;\r\n            let id = resp.data.item.id;\r\n            this.setState({\r\n                id: resp.data.item.id\r\n            })\r\n          console.log(id, data);\r\n        })\r\n    }\r\n\r\n    getMovies = () => {\r\n        axios.get(\"http://localhost:65332/api/poster/getall\")\r\n            .then(resp => {\r\n                let movies = resp.data.items;\r\n                this.setState({ movies })\r\n                console.log(resp);\r\n                console.log(movies);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"container more\">\r\n                    <h2 className=\"movietitlefont\">MoviePosters</h2>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.state.movies.map((movie) =>\r\n                        <div className=\" row col-4\" key={movie.id}>\r\n                            <div className=\"container box\">\r\n                                <a href=\"/DetailPage\"><img className=\"row ibox md-3 movies\" src={movie.imageUrl}  /></a>\r\n                                <div className=\"title\">{movie.title}</div>\r\n                                <div className=\"description\">{movie.description}</div>\r\n                                <div className=\"price\">{movie.price}</div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Posters;\n\n\n// WEBPACK FOOTER //\n// src/Views/Posters.js","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport NavBar from './Components/NavBar/NavBar';\r\nimport Carousel from './Components/Carousel/Carousel'\r\nimport Footer from './Components/Footer/Footer';\r\nimport Post from './Views/Post';\r\nimport Posters from './Views/Posters';\r\nimport DetailPage from './Views/DetailPage';\r\nimport App from './App';\r\n\r\nconst Routes = () => (\r\n    <Router>\r\n        <div>\r\n        <NavBar />\r\n            <Route exact path=\"/\" component={App}/>\r\n            <Route path=\"/Posters\" component={Posters}/>\r\n            <Route path=\"/AddPoster\" component={Post}/>\r\n            <Route path=\"/DetailPage\" component={DetailPage} />\r\n        </div>\r\n    </Router>\r\n);\r\n\r\nexport default Routes;\n\n\n// WEBPACK FOOTER //\n// src/routes.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AAiBA;AACA;AACA;AACA;AApBA;AAsBA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAjCA;AAmCA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAFA;AAchBA;AAmBA;;;;AAlEA;AACA;AAmEA;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AADA;AADA;AACA;AAWA;;;;A","sourceRoot":""}